{
  'basePath': '/',
  'consumes': ['application/json'],
  'info':
    {
      'description': "## By continuing to use this service you agree to our terms and conditions of Use\n- [Terms and Conditions](https://github.com/openvar/variantValidator/blob/master/README.md)\n\n## Powered by\n- [VariantValidator](https://github.com/openvar/rest_variantValidator) version 2.2.1.dev734+ga70a50c\n- [VariantFormatter](https://github.com/openvar/variantFormatter) version 2.2.1.dev73+g6cb7954\n - [vv_hgvs](https://github.com/openvar/vv_hgvs) version 2.2.0\n - [VVTA](https://www528.lamp.le.ac.uk/) release vvta_2024_01\n - [vvSeqRepo](https://www528.lamp.le.ac.uk/) release VV_SR_2024_04",
      'title': 'rest_VariantValidator',
      'version': '2.2.1.dev226+ga6ccfbe.d20241115'
    },
  'paths':
    {
      '/LOVD/lovd/{genome_build}/{variant_description}/{transcript_model}/{select_transcripts}/{checkonly}/{liftover}':
        {
          'get':
            {
              'description': 'This endpoint has a rate limit of 4 requests per second.',
              'operationId': 'get_lovd_class',
              'parameters':
                [
                  {
                    'description': '***Select the response format***',
                    'enum': ['application/json', 'text/xml'],
                    'in': 'query',
                    'name': 'content-type',
                    'type': 'string'
                  }
                ],
              'responses': { '200': { 'description': 'Success' } },
              'tags': ['LOVD']
            },
          'parameters':
            [
              {
                'description': "***Accepted***\n>   - True - (liftover to all genomic loci)\n>   - primary - (lift to primary assembly only)\n>   - False",
                'in': 'path',
                'name': 'liftover',
                'required': true,
                'type': 'string'
              },
              {
                'description': "***Accepted:***\n>   - True (return ONLY the genomic variant descriptions and not transcript and protein descriptions)\n>   - False\n>   - tx (Stop at transcript level, exclude protein)",
                'in': 'path',
                'name': 'checkonly',
                'required': true,
                'type': 'string'
              },
              {
                'description': "***Accepted:***\n>   - GRCh37\n>   - GRCh38\n>   - hg19\n>   - hg38\n",
                'in': 'path',
                'name': 'genome_build',
                'required': true,
                'type': 'string'
              },
              {
                'description': "***Return all possible transcripts***\n>   None or all (all transcripts at the latest versions)\n>   raw (all transcripts all version)\n>   select (select transcripts)\n>   mane (MANE Select transcripts)\n>   mane_select (MANE Select and MANE Plus Clinical transcripts)\n\n***Single***\n>   NM_000093.4\n\n***Multiple***\n>   NM_000093.4|NM_001278074.1|NM_000093.3",
                'in': 'path',
                'name': 'select_transcripts',
                'required': true,
                'type': 'string'
              },
              {
                'description': "***Accepted:***\n>   - refseq (return data for RefSeq transcript models)\n>   - ensembl (return data for ensembl transcript models)\n>   - all",
                'in': 'path',
                'name': 'transcript_model',
                'required': true,
                'type': 'string'
              },
              {
                'description': "***Genomic HGVS***\n>   - NC_000017.10:g.48275363C>A\n\n***Pseudo-VCF***\n>   - 17-50198002-C-A\n>   - 17:50198002:C:A\n\n>  *Notes*\n>   - *pVCF, multiple comma separated ALTs are supported*\n >   - *Multiple variants can be submitted, separated by the pipe '|' character*\n>   - *Recommended maximum is 10 variants per submission*",
                'in': 'path',
                'name': 'variant_description',
                'required': true,
                'type': 'string'
              }
            ]
        },
      '/VariantFormatter/variantformatter/{genome_build}/{variant_description}/{transcript_model}/{select_transcripts}/{checkonly}':
        {
          'get':
            {
              'description': 'This endpoint has a rate limit of 4 requests per second.',
              'operationId': 'get_variant_formatter_class',
              'parameters':
                [
                  {
                    'description': '***Select the response format***',
                    'enum': ['application/json', 'text/xml'],
                    'in': 'query',
                    'name': 'content-type',
                    'type': 'string'
                  }
                ],
              'responses': { '200': { 'description': 'Success' } },
              'tags': ['VariantFormatter']
            },
          'parameters':
            [
              {
                'description': "***Accepted:***\n>   - True (return ONLY the genomic variant descriptions and not transcript and protein descriptions)\n>   - False",
                'in': 'path',
                'name': 'checkonly',
                'required': true,
                'type': 'string'
              },
              {
                'description': "***Accepted:***\n>   - GRCh37\n>   - GRCh38",
                'in': 'path',
                'name': 'genome_build',
                'required': true,
                'type': 'string'
              },
              {
                'description': "***Return all possible transcripts***\n>   None or all (all transcripts at the latest versions)\n>   raw (all transcripts all version)\n>   select (select transcripts)\n>   mane (MANE select transcripts)\n>   mane_select (MANE select and MANE Plus Clinical transcripts)\n\n***Single***\n>   NM_000093.4\n\n***Multiple***\n>   NM_000093.4|NM_001278074.1|NM_000093.3",
                'in': 'path',
                'name': 'select_transcripts',
                'required': true,
                'type': 'string'
              },
              {
                'description': "***Accepted:***\n>   - refseq (return data for RefSeq transcript models)\n>   - ensembl (return data for ensembl transcript models)\n>   - all",
                'in': 'path',
                'name': 'transcript_model',
                'required': true,
                'type': 'string'
              },
              {
                'description': "***Genomic HGVS***\n>   - NC_000017.10:g.48275363C>A\n\n***Pseudo-VCF***\n>   - 17-50198002-C-A\n>   - 17:50198002:C:A\n\n>  *Notes*\n>   - *pVCF, multiple comma separated ALTs are supported*\n >   - *Multiple variants can be submitted, separated by the pipe '|' character*\n>   - *Recommended maximum is 10 variants per submission*",
                'in': 'path',
                'name': 'variant_description',
                'required': true,
                'type': 'string'
              }
            ]
        },
      '/VariantValidator/tools/gene2transcripts/{gene_query}':
        {
          'get':
            {
              'description': 'This endpoint has a rate limit of 1 request per second.',
              'operationId': 'get_gene2transcripts_class',
              'parameters':
                [
                  {
                    'description': '***Select the response format***',
                    'enum': ['application/json', 'text/xml'],
                    'in': 'query',
                    'name': 'content-type',
                    'type': 'string'
                  }
                ],
              'responses': { '200': { 'description': 'Success' } },
              'tags': ['VariantValidator']
            },
          'parameters':
            [
              {
                'description': "***HGNC gene symbol, HGNC ID, or transcript ID***\n\nCurrent supported transcript IDs\n- RefSeq\n\n***Single***\n>   COL1A1\n>   HGNC:2197\n>   NM_000088.4\n",
                'in': 'path',
                'name': 'gene_query',
                'required': true,
                'type': 'string'
              }
            ]
        },
      '/VariantValidator/tools/gene2transcripts_v2/{gene_query}/{limit_transcripts}/{transcript_set}/{genome_build}':
        {
          'get':
            {
              'description': 'This endpoint has a rate limit of 1 request per second.',
              'operationId': 'get_gene2transcripts_v2_class',
              'parameters':
                [
                  {
                    'description': '***Select the response format***',
                    'enum': ['application/json', 'text/xml'],
                    'in': 'query',
                    'name': 'content-type',
                    'type': 'string'
                  }
                ],
              'responses': { '200': { 'description': 'Success' } },
              'tags': ['VariantValidator']
            },
          'parameters':
            [
              {
                'description': "***GRCh37 or GRCh38***\n\nall = all builds, GRCh37 = GRCh37 only, GRCh38 = GRCh38 only",
                'in': 'path',
                'name': 'genome_build',
                'required': true,
                'type': 'string'
              },
              {
                'description': "***RefSeq or Ensembl***\n\nall = all transcripts, refseq = RefSeq only, ensembl = Ensembl only",
                'in': 'path',
                'name': 'transcript_set',
                'required': true,
                'type': 'string'
              },
              {
                'description': "***Return all possible transcripts***\n>   False\n\n***Single***\n>   NM_000088.4\n\n***Multiple***\n>   NM_000088.4|NM_000088.3\n\n***Limit to select transcripts***\n>    mane_select = MANE Select transcript only\n>    mane = Mane Select and MANE Plus Clinical\n>    select = All transcripts that have been classified as canonical",
                'in': 'path',
                'name': 'limit_transcripts',
                'required': true,
                'type': 'string'
              },
              {
                'description': "***HGNC gene symbol, HGNC ID, or transcript ID***\n\nCurrent supported transcript IDs\n- RefSeq or Ensembl\n\n***Single***\n>   COL1A1\n>   HGNC:2197\n>   NM_000088.4\n\n***Multiple***\n>   COL1A1|COL1A2|COL5A1|HGNC:2197\n",
                'in': 'path',
                'name': 'gene_query',
                'required': true,
                'type': 'string'
              }
            ]
        },
      '/VariantValidator/tools/hgvs2reference/{hgvs_description}':
        {
          'get':
            {
              'operationId': 'get_hgvs2reference_class',
              'parameters':
                [
                  {
                    'description': '***Select the response format***',
                    'enum': ['application/json', 'text/xml'],
                    'in': 'query',
                    'name': 'content-type',
                    'type': 'string'
                  }
                ],
              'responses': { '200': { 'description': 'Success' } },
              'tags': ['VariantValidator']
            },
          'parameters':
            [
              {
                'description': "***hgvs_description***\n\nSequence variation description in the HGVS format\n\n *Intronic descriptions in the context of transcript reference sequences are currently unsupported*",
                'in': 'path',
                'name': 'hgvs_description',
                'required': true,
                'type': 'string'
              }
            ]
        },
      '/VariantValidator/variantvalidator/{genome_build}/{variant_description}/{select_transcripts}':
        {
          'get':
            {
              'description': 'This endpoint has a rate limit of 2 requests per second.',
              'operationId': 'get_variant_validator_class',
              'parameters':
                [
                  {
                    'description': '***Select the response format***',
                    'enum': ['application/json', 'text/xml'],
                    'in': 'query',
                    'name': 'content-type',
                    'type': 'string'
                  }
                ],
              'responses': { '200': { 'description': 'Success' } },
              'tags': ['VariantValidator']
            },
          'parameters':
            [
              {
                'description': "***Accepted:***\n>   - GRCh37\n>   - GRCh38\n>   - hg19\n>   - hg38",
                'in': 'path',
                'name': 'genome_build',
                'required': true,
                'type': 'string'
              },
              {
                'description': "***HGVS***\n>   - NM_000088.3:c.589G>T\n>   - NC_000017.10:g.48275363C>A\n>   - NG_007400.1:g.8638G>T\n>   - LRG_1:g.8638G>T\n>   - LRG_1t1:c.589G>T\n\n***Pseudo-VCF***\n>   - 17-50198002-C-A\n>   - 17:50198002:C:A\n>   - GRCh38-17-50198002-C-A\n>   - GRCh38:17:50198002:C:A\n\n***Hybrid***\n>   - chr17:50198002C>A\n >   - chr17:50198002C>A(GRCh38)\n>   - chr17(GRCh38):50198002C>A\n>   - chr17:g.50198002C>A\n>   - chr17:g.50198002C>A(GRCh38)\n>   - chr17(GRCh38):g.50198002C>A",
                'in': 'path',
                'name': 'variant_description',
                'required': true,
                'type': 'string'
              },
              {
                'description': "***Return all possible transcripts***\n\n***Return only 'select' transcripts***\n>   select\n>   mane_select\n>   mane (MANE and MANE Plus Clinical)\n>   refseq_select\n\n***Single***\n>   NM_000093.4\n\n***Multiple***\n>   NM_000093.4|NM_001278074.1|NM_000093.3",
                'in': 'path',
                'name': 'select_transcripts',
                'required': true,
                'type': 'string'
              }
            ]
        },
      '/VariantValidator/variantvalidator_ensembl/{genome_build}/{variant_description}/{select_transcripts}':
        {
          'get':
            {
              'description': 'This endpoint has a rate limit of 2 requests per second.',
              'operationId': 'get_variant_validator_ensembl_class',
              'parameters':
                [
                  {
                    'description': '***Select the response format***',
                    'enum': ['application/json', 'text/xml'],
                    'in': 'query',
                    'name': 'content-type',
                    'type': 'string'
                  }
                ],
              'responses': { '200': { 'description': 'Success' } },
              'tags': ['VariantValidator']
            },
          'parameters':
            [
              {
                'description': "***Accepted:***\n>   - GRCh37\n>   - GRCh38\n>   - hg19\n>   - hg38",
                'in': 'path',
                'name': 'genome_build',
                'required': true,
                'type': 'string'
              },
              {
                'description': "***HGVS***\n>   - ENST00000225964.10:c.589G>T\n>   - NC_000017.10:g.48275363C>A\n\n***Pseudo-VCF***\n>   - 17-50198002-C-A\n>   - 17:50198002:C:A\n>   - GRCh38-17-50198002-C-A\n>   - GRCh38:17:50198002:C:A\n\n***Hybrid***\n>   - chr17:50198002C>A\n >   - chr17:50198002C>A(GRCh38)\n>   - chr17(GRCh38):50198002C>A\n>   - chr17:g.50198002C>A\n>   - chr17:g.50198002C>A(GRCh38)\n>   - chr17(GRCh38):g.50198002C>A",
                'in': 'path',
                'name': 'variant_description',
                'required': true,
                'type': 'string'
              },
              {
                'description': "***Return all possible transcripts***\n\n***Return only 'select' transcripts***\n>   select\n>   mane_select\n>   mane (MANE and MANE Plus Clinical)\n>   refseq_select\n\n***Single***\n>   ENST00000225964.10\n\n***Multiple***\n>   ENST00000225964.9|ENST00000225964.10",
                'in': 'path',
                'name': 'select_transcripts',
                'required': true,
                'type': 'string'
              }
            ]
        },
      '/hello/':
        {
          'get':
            {
              'operationId': 'get_hello_class',
              'parameters':
                [
                  {
                    'description': '***Select the response format***',
                    'enum': ['application/json', 'text/xml'],
                    'in': 'query',
                    'name': 'content-type',
                    'type': 'string'
                  }
                ],
              'responses': { '200': { 'description': 'Success' } },
              'tags': ['hello']
            }
        },
      '/hello/limit':
        {
          'get':
            {
              'operationId': 'get_limited_rate_helllo',
              'parameters':
                [
                  {
                    'description': '***Select the response format***',
                    'enum': ['application/json', 'text/xml'],
                    'in': 'query',
                    'name': 'content-type',
                    'type': 'string'
                  }
                ],
              'responses': { '200': { 'description': 'Success' } },
              'tags': ['hello']
            }
        },
      '/hello/trigger_error/{error_code}':
        {
          'get':
            {
              'operationId': 'get_exception_class',
              'parameters':
                [
                  {
                    'description': '***Select the response format***',
                    'enum': ['application/json', 'text/xml'],
                    'in': 'query',
                    'name': 'content-type',
                    'type': 'string'
                  }
                ],
              'responses': { '200': { 'description': 'Success' } },
              'tags': ['hello']
            },
          'parameters':
            [{ 'in': 'path', 'name': 'error_code', 'required': true, 'type': 'integer' }]
        }
    },
  'produces': ['application/json', 'text/xml'],
  'responses':
    {
      'Forbidden': {},
      'InternalServerError': {},
      'MaskError': { 'description': 'When any error occurs on mask' },
      'ParseError': { 'description': "When a mask can't be parsed" },
      'TooManyRequests': {}
    },
  'swagger': '2.0',
  'tags':
    [
      { 'description': 'VariantValidator API Endpoints', 'name': 'VariantValidator' },
      { 'description': 'Variantformatter API Endpoints', 'name': 'VariantFormatter' },
      { 'description': 'LOVD API Endpoints', 'name': 'LOVD' },
      {
        'description': 'Endpoint to check services are "alive" and display the current software and database versions',
        'name': 'hello'
      }
    ]
}
