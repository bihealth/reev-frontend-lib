// This file is auto-generated by @hey-api/openapi-ts
import { type Options, createClient, createConfig } from '@hey-api/client-fetch'

import type {
  GenesClinvarData,
  GenesClinvarError,
  GenesClinvarResponse2,
  GenesInfoData,
  GenesInfoError,
  GenesInfoResponse2,
  GenesLookupData,
  GenesLookupError,
  GenesLookupResponse2,
  GenesSearchData,
  GenesSearchError,
  GenesSearchResponse2,
  SeqvarsAnnosQueryData,
  SeqvarsAnnosQueryError,
  SeqvarsAnnosQueryResponse,
  StrucvarsClinvarQueryData,
  StrucvarsClinvarQueryError,
  StrucvarsClinvarQueryResponse,
  VersionsInfoError,
  VersionsInfoResponse2
} from './types.gen'

export const client = createClient(createConfig())

/**
 * Query for ClinVar information for one or more genes.
 */
export const genesClinvar = <ThrowOnError extends boolean = false>(
  options?: Options<GenesClinvarData, ThrowOnError>
) => {
  return (options?.client ?? client).get<GenesClinvarResponse2, GenesClinvarError, ThrowOnError>({
    ...options,
    url: '/api/v1/genes/clinvar'
  })
}

/**
 * Query for annotations for one or more genes.
 */
export const genesInfo = <ThrowOnError extends boolean = false>(
  options?: Options<GenesInfoData, ThrowOnError>
) => {
  return (options?.client ?? client).get<GenesInfoResponse2, GenesInfoError, ThrowOnError>({
    ...options,
    url: '/api/v1/genes/info'
  })
}

/**
 * Search for genes.
 */
export const genesLookup = <ThrowOnError extends boolean = false>(
  options: Options<GenesLookupData, ThrowOnError>
) => {
  return (options?.client ?? client).get<GenesLookupResponse2, GenesLookupError, ThrowOnError>({
    ...options,
    url: '/api/v1/genes/lookup'
  })
}

/**
 * Search for genes.
 */
export const genesSearch = <ThrowOnError extends boolean = false>(
  options: Options<GenesSearchData, ThrowOnError>
) => {
  return (options?.client ?? client).get<GenesSearchResponse2, GenesSearchError, ThrowOnError>({
    ...options,
    url: '/api/v1/genes/search'
  })
}

/**
 * Query for annotations for a single variant.
 */
export const seqvarsAnnosQuery = <ThrowOnError extends boolean = false>(
  options: Options<SeqvarsAnnosQueryData, ThrowOnError>
) => {
  return (options?.client ?? client).get<
    SeqvarsAnnosQueryResponse,
    SeqvarsAnnosQueryError,
    ThrowOnError
  >({
    ...options,
    url: '/api/v1/seqvars/annos'
  })
}

/**
 * Endpoint for querying ClinVar SV annotations.
 */
export const strucvarsClinvarQuery = <ThrowOnError extends boolean = false>(
  options: Options<StrucvarsClinvarQueryData, ThrowOnError>
) => {
  return (options?.client ?? client).get<
    StrucvarsClinvarQueryResponse,
    StrucvarsClinvarQueryError,
    ThrowOnError
  >({
    ...options,
    url: '/api/v1/strucvars/clinvar/query'
  })
}

/**
 * Query for annotations for one variant.
 */
export const versionsInfo = <ThrowOnError extends boolean = false>(
  options?: Options<unknown, ThrowOnError>
) => {
  return (options?.client ?? client).get<VersionsInfoResponse2, VersionsInfoError, ThrowOnError>({
    ...options,
    url: '/api/v1/versionsInfo'
  })
}
